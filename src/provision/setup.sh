#! /bin/bash
set -e

################################################################################
#################################### GLOBAL ####################################
################################################################################
included=""
timings=()
start=$(date +%s)
client=$(who --ips -ms | awk '{ print $5 }')

################################################################################
################################### INCLUDES ###################################
################################################################################
. ./config.sh
. ./utils.sh

################################################################################
##################################### ARGS #####################################
################################################################################
provisioners=$(echo "$1" | cut -d, -f1- --output-delimiter=$'\n')
shift

flag_upgrade=0
flag_update=0
for i in "$@"; do
    case "$i" in
        "--upgrade" | "-uu")
            flag_update=1
            flag_upgrade=1;
            ;;
        "--update" | "-u")
            flag_update=1;
            ;;
    esac
done

################################################################################
#################################### UPDATE ####################################
################################################################################
sed -i "s/mirrors.digitalocean/archive\.ubuntu/g" /etc/apt/sources.list
if [ $flag_update -eq 1 ]; then
    apt-get update
fi
if [ $flag_upgrade -eq 1 ]; then
    apt-get upgrade -y
fi

install make sudo curl git wget tmux ufw

################################################################################
############################## DISABLE apt.daily ###############################
################################################################################
systemctl stop apt-daily.timer || true
systemctl disable apt-daily.timer || true

################################################################################
################################# SSH FIREWALL #################################
################################################################################
ufw allow 22 > /dev/null
echo y | ufw enable

################################################################################
##################################### USER #####################################
################################################################################
if ! getent passwd "${user}" >/dev/null; then
    useradd -ms /bin/bash -d "${home}" "${user}"
fi

if passwd -S "${user}" | grep -e "${user} L" -e "${user} NP" >/dev/null; then
    echo "${user}:${pw}" | chpasswd
fi
set_line /etc/sudoers "${user} ALL=(ALL) NOPASSWD: ALL"

################################################################################
##################################### SSH ######################################
################################################################################
cp ./sshd_config /etc/ssh/sshd_config
ensure_dir "${home}/.ssh"
cp ./authorized_keys "${home}/.ssh/authorized_keys"

################################################################################
###################################### UX ######################################
################################################################################
cp ./bashrc "${home}/.bashrc"

################################################################################
#################################### PERMS #####################################
################################################################################
fix_user_perms "${user}"

################################################################################
############################### RELOAD SERVICES ################################
################################################################################
native_service ufw.service
native_service sshd.service

################################################################################
################################## PROVISION ###################################
################################################################################
rm /var/provisioners || true

for prov in $provisioners; do
    provName=$(echo "$prov" | cut -d: -f1)
    provArgs=$(echo "$prov" | cut -d: -f2- --output-delimiter=' ')
    if [ "$provName" != "" ] && [ "$provName" != "none" ]; then
        include "$provName" $provArgs
    fi
done

################################################################################
################################### FIREWALL ###################################
################################################################################
echo y | ufw reset
ufw allow 22 >/dev/null
echo y | ufw enable
for rule in "${_firewall[@]}"; do
    echo "firewall $rule"
    ufw $rule > /dev/null
done

################################################################################
############################## WAIT FOR SERVICES ###############################
################################################################################
failed=0
for i in "${_service_pids[@]}"; do
    pid=$(echo "$i" | cut -d '|' -f2)
    name=$(echo "$i" | cut -d '|' -f1)
    echo "Waiting for service $name"
    wait $pid || {
        failed=1
        echo "Service $name failed" >&2
    }
done

if [ $failed -ne 0 ]; then
    exit 1
fi

################################################################################
################################### SUMMARY ####################################
################################################################################
echo
timings+=("Total: $(( $(date +%s) - start))s")
for i in "${timings[@]}"; do
    printf '\033[1;30;42m %-30s %-10s \033[0m\n' ${i}
done

